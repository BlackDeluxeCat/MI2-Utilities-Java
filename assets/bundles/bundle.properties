mi2ui.buttons.cleanGhost = Clean Ghost Block
mi2ui.buttons.rebuild = Rebuild Ghost Block
mi2ui.buttons.deleteToScheme = Delete Area to Scheme
mi2ui.buttons.fpsCtrl = Time Scl
mi2ui.buttons.createForm = Create Form

logicHelper.splitField.msg = Split
logicHelper.search.prev = Prev
logicHelper.search.next = Next
logicHelper.search.replace = Replace
logicHelper.search.replaceAll = Replace All
logicHelper.cutPaste.start = Start from
logicHelper.cutPaste.end = to
logicHelper.cutPaste.to = Insert to
logicHelper.cutPaste.copyMode = Copy Mode
logicHelper.cutPaste.transJump = Jump Trans
logichelper.backup.backupIn = Backup In

mapInfo.buttons.allAttrs = Map Attrs
mapInfo.buttons.allWaves = Waves
mapInfo.buttons.setWave = Set Wave
mapInfo.buttons.adminFunctions = Admin
mapInfo.buttons.forceRunWave = Force Next
mapInfo.buttons.bannedBlocks = Banned Blocks
mapInfo.buttons.bannedUnits = Banned Units
mapInfo.buttons.hiddenBuildItems = Hidden Build Items
mapInfo.buttons.revealedBlocks = Revealed Blocks
mapInfo.buttons.objectives = Map Objectives
mapInfo.buttons.objectiveFlags = Objective Flags
mapInfo.buttons.mapTags = Map Tags
mapInfo.buttons.expand = Expand
mapInfo.buttons.fold = Fold

mapInfo.view = View
mapInfo.wave = Wave {0}
mapInfo.team = Team
mapInfo.infAmmo = Inf Ammo
mapInfo.infRes = Inf Res
mapInfo.cheat = Cheat
mapInfo.rtsAI = AI
mapInfo.aiCoreSpawn = (Core Spawn)
mapInfo.solarMulti = Solar
mapInfo.logicUnitBuild = Logic Build
mapInfo.staticColor = Static Fog Color
mapInfo.coreDestroyClear = Clear When Core Destory
mapInfo.showSpawns = Show Spawns
mapInfo.possessionAllowed = Possession Allowed
mapInfo.winWave = Win Wave

minimap.finder.selectTeam = Team [[{0}]
minimap.finder.title = Global Scan
minimap.finder.find = Find Options
minimap.finder.replace = Replace Options
minimap.finder.unitPos = Unit Pos
minimap.finder.unitRange = Unit Rng
minimap.finder.buildRange = Build Rng
minimap.finder.mapRange = Whole Map
minimap.finder.showBlockNames = Block Name

emoji.switchDisplay = \ue811  < Icon / List >
emoji.noResult = [lightgray]\ue815 No Result[]

MI2UI.MI2U = MI2U
LogicHelper.MI2U = Logic Helper
Minimap.MI2U = Minimap
Emojis.MI2U = Emoji
CoreInfo.MI2U = Core Info

update.title = MI2U Update Check
update.checking = Checking...
update.latest = Current is latest!
update.updateAvailable = New release available!
update.failCheck = Check failed.
update.download = Download
update.close = Close

settings.tags.restart = Restart required
settings.tags.reloadWorld = Reload world required
settings.tags.performance = May affect performance

mi2u.settings.cleanUp = Clean Up MI2U Settings
mi2u.settings.removeConf = (IRREVERSIBLE)Confirm remove this setting: 
mi2u.settings.removeAllConf = [scarlet](IRREVERSIBLE)Confirm remove all MI2U settings?
settings.mindow2.scale = Scaling UI 5% ~ 400%
settings.graphics.ui = Windows
settings.MI2UI.showEmojis = Emojis
settings.MI2UI.showCoreInfo = Core Info
settings.MI2UI.showMinimap = Minimap
settings.MI2UI.showLogicHelper = Logic Helper
settings.graphics.zone = Zone Rendering
settings.MI2UI.enPlayerCursor = Draw Player Cursor
settings.MI2UI.enOverdriveZone = Draw Overdrive Zone
settings.MI2UI.enMenderZone = Draw Mend Zone
settings.MI2UI.enSpawnZone = Draw Spawnpoint Zone
settings.MI2UI.enTurretRangeZone = Draw Turret Range
settings.graphics.filterTurretRangeZone = Turret Type Filter
settings.MI2UI.turretZoneColorStyle = Turret Range Fill Color Set
settings.MI2UI.enUnitRangeZone = Draw Unit Range
settings.graphics.filterUnitRangeZone = Unit Type Filter
settings.graphics.distributionReveal = Distribution Revealing
settings.MI2UI.enDistributionReveal = Enable Distribution Reveal
settings.MI2UI.drevealBridge = Reveal Bridge
settings.MI2UI.drevealJunction = Reveal Junction
settings.MI2UI.drevealJunction.description = Draw items inside junction. Draw the item inside router, and the direction of transmission.
settings.MI2UI.drevealUnloader = Render Unloader
settings.MI2UI.drevealUnloader.description = Draw the direction in which the unloader was last transmitted, where the red bar indicates input and the yellow bar indicates output. If the unloader is set null, the last transferred item is also drawn.
settings.MI2UI.drevealInventory = Renders Items in Building
settings.MI2UI.drevealInventory.description = Draws a table of building contents for buildings without distribution reveal. All items, liquids and their amount are displayed on the overlay. Turrets also show ammo.
settings.graphics.overlay = Overlay
settings.MI2UI.enBlockHpBar = Building Health Bar
settings.MI2UI.enUnitHpBar = Unit Health Bar
settings.MI2UI.unitHpBarDamagedOnly = Unit Health Bar Hide on Full Health
settings.MI2UI.enUnitHitbox = Unit Hitbox
settings.MI2UI.enUnitLogic = Unit Logic Lines
settings.MI2UI.enUnitLogic.description = Display moving target, control timer, and item transfer timer for the logic controlled units.
settings.MI2UI.enUnitPath = Unit Pathfind
settings.MI2UI.enUnitPath.description = Displaying unit pathfinding routes is disabled in multiplayer games. Survival Mode allows adjustable path line length, while RTS pathfinding displays only the next node.
settings.MI2UI.enUnitPath.length = Length of Pathfind
settings.graphics.drawGroups = Draw Entity Group
settings.MI2UI.disableWreck = Disable Wreck
settings.MI2UI.disableUnit = Disable Unit
settings.MI2UI.disableBullet = Disable Bullet
settings.MI2UI.disableBuilding = Disable Building
settings.game.fpsCtrl = Time Scaler
settings.game.fpsCtrl.description = Since the game couples rendering frames with logic frames, lag causes reduced logic frames per delta time. This affects entities using frame-based rather than time-based calculations.\nEnable the Time Scaler in MI2UI to slow time progression, ensuring sufficient logic frames execute per delta time.\nStandard logic frame rate: 60 fps.
settings.MI2UI.fpsCtrl.cutoff = Frame Rate Threshold
settings.MI2UI.fpsCtrl.cutoff.description = Minimum render frame rate supported by the scaler. Below this value, select delta time intervals will be skipped to maintain game responsiveness.
settings.input = Input
settings.MI2UI.inputReplace = Replace Input Handler
settings.MI2UI.inputReplace.description = [accent]Replace[] the vanilla input handler with the modded one. Features such as AI, minimap, and RTS formation camera panning are all dependent on this.
settings.MI2UI.instantBuild = Sandbox Instantly Build
settings.MI2UI.rtsFormDoubleTap = RTS Formation Double-tap Sensitivity
settings.MI2UI.forceTapTile = Force Cross-team Interaction
settings.MI2UI.edgePanning = Panning on Edge
settings.modify = Modify Vanilla
settings.MI2UI.blockSelectTableHeight = Block Select Table Height
settings.MI2UI.modifyBlockBars = Modify Hovering Info Table Bars
settings.MI2UI.modifyBlockBars.description = Replace or add more detailed information such as health bars, shield bars, etc. to the unit and building hovering table bars.
settings.MI2UI.replaceTopTable = Replaces Hovering Info Table
settings.MI2UI.replaceTopTable.description = [accent]Replace[] the vanilla hovering info table with the modded one. You can display the tile, units and buildings at the cursor at the same time.
settings.MI2UI.modTopTableFollowMouse = Mod Hovering Info Table Follows Mouse
settings.MI2UI.modTopTableFollowMouse.description = Detach the mod's hovering table from the bottom right corner and make it follow the cursor. The vanilla one is not supported.
settings.MI2UI.maxSchematicSize = Max Schematic Size
settings.MI2UI.maxZoom = Max Zoom
settings.MI2UI.minZoom = Min Zoom
settings.MI2UI.enableUpdate = Mod Update Check

settings.CoreInfo.showCoreItems = Show Core Items
settings.CoreInfo.showCoreItems.description = Similar to vanilla. It has item statistics chart. Click on the icon to popup the item's 60-second chart.
settings.CoreInfo.showUnits = Show Unit Counts
settings.CoreInfo.showUnits.description = Count the number of units of each type. Click on the icon to pan to a random unit.
settings.CoreInfo.coreItemColumns = Item Columns
settings.CoreInfo.unitIconSize = Unit Icon Size
settings.CoreInfo.showPowerGraphs = Show Power Graph Bars
settings.CoreInfo.showPowerGraphs.description = Grid graph bars display each grid individually. Hover to display the power I/O statistics. The power icon button is to switch display mode.
settings.CoreInfo.itemsMaxHeight = Items Max Height
settings.CoreInfo.unitsMaxHeight = Units Max Height

settings.Minimap.drawLabel = Draw Label
settings.Minimap.drawSpawn = Draw Spawnpoint
settings.Minimap.drawFog = Draw Fog
settings.Minimap.drawIndicator = Draw Attack Indicator
settings.Minimap.drawObjective = Draw Objective
settings.Minimap.size = Minimap Size
settings.Minimap.drawUnitColorDiff = Unit Icon Color Difference
settings.Minimap.drawUnitOutline = Unit Icon Stroke

settings.LogicHelper.autocomplete = Auto Complete
settings.LogicHelper.split = Split

settings.Emojis.emojiPerRow = Emojis Per Row
settings.Emojis.emojiMaxCol = Max Display Columns

settings.mindow.scale = UI Scale

settings.meta.category = MI2U Settings
settings.meta.dialogTitle = MI2U Settings
settings.meta.mindowHelp = Help

MI2UI.help = MI2U Main Window.\
    \nAI requires "inputReplace" setting. \
    \nClick AI button to config.\
    \nArrows: Move to center of the screen. Cfg: Take items from core.\
    \nMono: Mine ores. \
    \nPoly: Auto approach to buildplan. Cfg: Auto Rebuild, Poly Assistant.\
    \nRepair: Move to repair case hp is lower than 60%. \
    \nAT: Another Auto Target. Cfg: Target damaged/enemy.\
    \nWorld Processor: Logic custom AI. @unit is the player. Cfg: Logic Code.\
    \n\nAuto Time Scale：Automatically reduce the time flow speed to fps/60 to avoid low fps reducing building efficiency. 
LogicHelper.help = Functional extension for built-in logic editor.\
    \n[yellow]Vars List: Handle variables named as an attribute reference, such as "unit1.coords.x", "task.itemtype".\
    \nHas a split TextField. \nIf split is empty, var names will be listed. Else, var names will be cut with the split. \
    \nExample: "unit1.coords.x" => "unit1.", "coords.", "x"\
    \nClick to copy the frag, or click left-side button to copy whole name.\
    \nCAUTION: LogicDialog should be closed to rebuild var list.\
    \n[yellow]Search: Search or replace string, matching text fields.[]\
    \nWhole word matching, case sensitive matching available.\
    \n[yellow]Area Copy: Cut or copy a block of instructions to target address.[]\
    \nTo select block, specify start-address(included) and end-address(included).\
    \nSpecify paste-start-address and block will be inserted before target instruction. To insert to the end, specify paste-start-address as the last address + 1.\
    \nIf "Jump Trans" is active, jump arrows are operated by relative positions as far as possible.\
    \n[cyan]Attr: Layer = LogicDialog.
CoreInfo.help = Detailed core info. Check core item(also its fluctuation), unit count, power net analysis.\
    \nHas a team select button, which changes the team this ui displays for.\
    \nClicking item icons, hovering power bars to observe resource changes.\
    \nClicking unit icons or power bars to pan between all units.

fullAI.help = Logic Custom AI can control player unit with processor code. After learning the basics of logic, you need to understand several changes that this AI makes to regular logic: \
  \n\n[accent]@unit[] Permanently automatically bind player units, cannot be changed. So [accent]Ucontrol, Ulocate, etc.[], can be used directly.\
  \n\nPlayer actions are divided into two parts: move, attack, and two timers are independent. 10s without control or using [accent]idle|stop[] will release the control to other AIs.\
  \n\nLogic is based on world processor and can use world-sense instructions, but world-modifying and unsimulable instructions only work in single-player sandbox, such as [accent]SetProp, Write, SetBlock, etc.[] \
  \n\nSome logic functions are implemented by simulating players, such as [accent]Control-config[].\
  \n\nMultiple custom logics can be stored, but only one can be run at a time.\
  \n\nOn first load, a default logic with sandbox map editor will be loaded.\
  \n\nYou can customize the UI using Print statements. The statements for creating controls are as follows:\
  \n[accent]UI.row()[]\
  \nStarts a new row in the UI pane.\
  \n[accent]UI.clear()[]\
  \nClean all children in UI pane.\
  \n[accent]UI.button(variable name)[]\
  \nGenerates a button that sets boolean variable.\
  \n[accent]UI.field(variable name)[]\
  \nGenerates a text box that sets numeric variable.\
  \n[accent]UI.choose(variable name)[]\
  \nGenerates a selection box that sets variable to an item, unit, building, or other type. The variable needs to be initialized to a quantity of that type.\
  \n[accent]UI.info(variable name)[]\
  \nGenerates a label and monitors the variable.\
  \nSimply write the statement (in double quotes) in the Print statement. \
  \nEach time the statement is executed, a new control is generated, so please place it in the initialization statement.\
  \n\nThe Developer shall not be liable for any consequences arising from the improper use of this feature.

ai.preset.baseminemode = Mining
ai.preset.baseminemode.intro = Automated mining.\nSupports multiple ore types, prioritizes core reserves.\n\nOre indicators: F-Floor ore, W-Wall ore\nUses Anuke's vanilla ore index mapping.
ai.preset.autobuildmode = Build Plan Tracker
ai.preset.autobuildmode.intro = Automatically moves near construction plans.\n\nOptions: Auto-rebuild, Build Support.
ai.preset.autobuildmode.support = Build Support
ai.preset.autobuildmode.rebuild = Auto-rebuild
ai.preset.autotargetmode = Auto-targeting
ai.preset.autotargetmode.intro = Automatically aims at targets in sight.
ai.preset.autotargetmode.attack = Attack Enemies
ai.preset.autotargetmode.heal = Repair Buildings
ai.preset.centerfollowmode = Snap Screen Center
ai.preset.centerfollowmode.intro = Auto-moves to screen center (Desktop)\nStays in place, no screen centering (Mobile)
ai.preset.logicmode = World Processor Hacked
ai.preset.logicmode.intro = Write custom AI in world processor form.\
  \n\n\n\nKey modifications:\
  \n\n[accent]@unit[] permanently auto-binds player unit. Binding/unbinding disabled. Thus [accent]Ucontrol, Ulocate[] work directly.\
  \n\nPlayer actions split: Movement/Attack. Two independent timers. Releases control after 10s idle. Use [accent]Ucontrol-idle[] to cut movement, [accent]Ucontrol-stop[] to cut attack.\
  \n\nWorld sensing commands work. World-altering commands (e.g. [accent]SetProp, Write, SetBlock[]) only in singer-player sandbox. Some commands emulate players (e.g. [accent]Control-config[]).\
  \n\n[accent]Read, Write[] can access variables of other World Processor AIs. Building name is the target AI's name (string), variable name is the target variable's name (string). Read traverses top-down, Write traverses bottom-up. Only the first matching AI is accessed if duplicate names exist.\
  \n\nCreate custom UI via Print statements. UI control syntax:\
  \n[accent]UI.row()[]\
  \nNew UI row\
  \n[accent]UI.clear()[]\
  \nClear UI\
  \n[accent]UI.button(variable)[]\
  \nCreate button (sets 1/0 or TRUE/FALSE)\
  \n[accent]UI.field(variable)[]\
  \nCreate text field (sets numeric var)\
  \n[accent]UI.choose(variable)[]\
  \nCreate selector (sets item/unit/building type). Initialize variable as type.\
  \n[accent]UI.info(variable)[]\
  \nCreate monitor label (tracks variable).\
  \nExecute statements as strings in Print (use double quotes). Each execution creates new controls - recommend initializing only once.
ai.config.logic.ui = Logic UI
ai.config.logic.unitBuildWarning = Allow UnitBuild addition bypass map rule\nCAUTION: Unexpected exit may corrupt map rules

ai.preset.logicmode.preset.unitspawner = Unit Spawner
ai.preset.logicmode.preset.unitspawner.intro = Set type, coordinates, facing in custom UI. Click run button to spawn units.\nUnit attributes require additional setup statements at logic end.
ai.preset.logicmode.preset.mapeditor = Map Editor
ai.preset.logicmode.preset.mapeditor.intro = Map editor. Hold and drag to paint terrain. Simultaneously edits floors and ores.
ai.preset.logicmode.preset.switchteam = Team Switcher
ai.preset.logicmode.preset.switchteam.intro = Enter numeric team ID, then click button to switch.

category.MI2U.name = MI2U
keybind.ctrl_build_bypass.name = Control Building Bypass Unit
keybind.auto_complete_logic.name = Auto Complete Logic
keybind.ctrl_ui.name = [accent]UI Control Combination[]
keybind.ui_pop_world_finder.name = [accent]UI[] Pop Global Scanner